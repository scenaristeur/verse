"use strict";(self["webpackChunkverse"]=self["webpackChunkverse"]||[]).push([[107],{2082:function(e,t,o){o.r(t),o.d(t,{default:function(){return i}});var r=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("b-container",[o("h3",[e._v("Synchro")]),e._v(" pod storage : "+e._s(e.pod.storage)),o("br"),o("b-row",[o("b-col",{attrs:{sm:"3"}},[o("label",{attrs:{for:"neuroneStore"}},[o("code",[e._v("Neurone storage")]),e._v(":")])]),o("b-col",{attrs:{sm:"9"}},[o("b-form-input",{attrs:{id:"neuroneStore",type:"text"},model:{value:e.pod.neuroneStore,callback:function(t){e.$set(e.pod,"neuroneStore",t)},expression:"pod.neuroneStore"}})],1)],1),o("b-button",{attrs:{size:"sm",variant:"success"},on:{click:e.synchronize}},[e._v("Get remote Neurones")]),e._v(" "+e._s(e.nodes)+" "),o("hr")],1)},n=[],s={name:"SynchroView",methods:{synchronize(){this.$synchronize()}},computed:{pod:{get(){return this.$store.state.solid.pod},set(){}},nodes:{get(){return this.$store.state.nodes.nodes},set(){}}}},u=s,c=o(1001),a=(0,c.Z)(u,r,n,!1,null,null,null),i=a.exports}}]);
//# sourceMappingURL=synchro.acdbeb24.js.map